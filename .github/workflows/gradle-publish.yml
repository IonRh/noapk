name: 构建Android APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # 当推送带v开头的标签时触发，例如v1.0.0
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: gradle

      - name: 设置Gradle权限
        run: chmod +x gradlew

      - name: 创建Gradle Wrapper
        run: |
          mkdir -p gradle/wrapper
          echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
          echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.6-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties

      - name: 生成Gradle Wrapper JAR
        run: |
          mkdir -p gradle/wrapper
          curl -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v7.6.0/gradle/wrapper/gradle-wrapper.jar

      - name: 创建本地属性文件
        run: touch local.properties

      - name: 创建调试签名密钥
        run: |
          keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

      - name: 创建签名配置
        run: |
          echo "storeFile=../debug.keystore" > app/signing.properties
          echo "storePassword=android" >> app/signing.properties
          echo "keyAlias=androiddebugkey" >> app/signing.properties
          echo "keyPassword=android" >> app/signing.properties

      - name: 更新app/build.gradle添加签名配置
        run: |
          sed -i '/defaultConfig {/i \
          signingConfigs {\
              release {\
                  def signingProps = new Properties()\
                  def signingFile = file("signing.properties")\
                  if (signingFile.exists()) {\
                      signingProps.load(new FileInputStream(signingFile))\
                      storeFile file(signingProps["storeFile"])\
                      storePassword signingProps["storePassword"]\
                      keyAlias signingProps["keyAlias"]\
                      keyPassword signingProps["keyPassword"]\
                  }\
              }\
          }' app/build.gradle
          
          sed -i 's/release {/release {\n            signingConfig signingConfigs.release/' app/build.gradle

      - name: 创建资源目录
        run: |
          mkdir -p app/src/main/res/mipmap-hdpi
          mkdir -p app/src/main/res/mipmap-mdpi
          mkdir -p app/src/main/res/mipmap-xhdpi
          mkdir -p app/src/main/res/mipmap-xxhdpi
          mkdir -p app/src/main/res/mipmap-xxxhdpi

      - name: 创建Gradlew脚本
        run: |
          echo '#!/usr/bin/env sh' > gradlew
          echo 'exec gradle "$@"' >> gradlew
          chmod +x gradlew

      - name: 构建Debug APK
        run: ./gradlew assembleDebug

      - name: 构建Release APK
        run: ./gradlew assembleRelease

      - name: 重命名Release APK
        run: |
          mkdir -p artifacts
          cp app/build/outputs/apk/release/app-release.apk artifacts/auto-exit-app-release.apk
          cp app/build/outputs/apk/debug/app-debug.apk artifacts/auto-exit-app-debug.apk

      - name: 上传Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: artifacts/auto-exit-app-debug.apk

      - name: 上传Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: artifacts/auto-exit-app-release.apk

      # 如果是标签推送，则创建Release
      - name: 创建GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/auto-exit-app-release.apk
            artifacts/auto-exit-app-debug.apk
          name: Release ${{ github.ref_name }}
          body: |
            # 自动退出应用 - 版本 ${{ github.ref_name }}
            
            这是一个自动退出的Android应用，在启动后会立即自动退出，不会保留任何后台进程。
            
            ## 下载
            
            - [Release版本APK](artifacts/auto-exit-app-release.apk)
            - [Debug版本APK](artifacts/auto-exit-app-debug.apk)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
