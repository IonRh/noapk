name: 构建Android APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # 当推送带v开头的标签时触发，例如v1.0.0
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: gradle

      - name: 创建Gradle Wrapper
        run: |
          mkdir -p gradle/wrapper
          echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
          echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.6-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties

      - name: 生成Gradle Wrapper JAR
        run: |
          mkdir -p gradle/wrapper
          curl -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v7.6.0/gradle/wrapper/gradle-wrapper.jar

      - name: 创建项目级build.gradle文件
        run: |
          cat > build.gradle << 'EOF'
          // Top-level build file where you can add configuration options common to all sub-projects/modules.
          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:7.4.2'
                  // NOTE: Do not place your application dependencies here; they belong
                  // in the individual module build.gradle files
              }
          }

          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }

          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOF

      - name: 创建Gradlew脚本
        run: |
          echo '#!/usr/bin/env sh' > gradlew
          echo 'exec gradle "$@"' >> gradlew
          chmod +x gradlew

      - name: 创建本地属性文件
        run: touch local.properties

      - name: 创建gradle.properties文件
        run: |
          cat > gradle.properties << 'EOF'
          # Project-wide Gradle settings.
          
          # AndroidX package structure to make it clearer which packages are bundled with the
          # Android operating system, and which are packaged with your app's APK
          # https://developer.android.com/topic/libraries/support-library/androidx-rn
          android.useAndroidX=true
          
          # Automatically convert third-party libraries to use AndroidX
          android.enableJetifier=true
          
          # Kotlin code style for this project: "official" or "obsolete":
          kotlin.code.style=official
          
          # Enables namespacing of each library's R class so that its R class includes only the
          # resources declared in the library itself and none from the library's dependencies,
          # thereby reducing the size of the R class for that library
          android.nonTransitiveRClass=true
          
          # 配置Gradle使用更少的内存
          org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
          
          # 启用Gradle守护进程
          org.gradle.daemon=true
          
          # 启用并行构建
          org.gradle.parallel=true
          
          # 启用构建缓存
          org.gradle.caching=true
          EOF

      - name: 创建调试签名密钥
        run: |
          keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

      - name: 创建修改后的app/build.gradle文件
        run: |
          cat > app/build.gradle << 'EOF'
          plugins {
              id 'com.android.application'
          }

          android {
              compileSdkVersion 33
              
              signingConfigs {
                  release {
                      storeFile file("../debug.keystore")
                      storePassword "android"
                      keyAlias "androiddebugkey"
                      keyPassword "android"
                  }
              }
              
              defaultConfig {
                  applicationId "com.example.autoexit"
                  minSdkVersion 21
                  targetSdkVersion 33
                  versionCode 1
                  versionName "1.0"
              }
              
              buildTypes {
                  release {
                      signingConfig signingConfigs.release
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
                  debug {
                      signingConfig signingConfigs.release
                  }
              }
              
              compileOptions {
                  sourceCompatibility JavaVersion.VERSION_1_8
                  targetCompatibility JavaVersion.VERSION_1_8
              }
          }

          dependencies {
              implementation 'androidx.appcompat:appcompat:1.6.1'
              implementation 'com.google.android.material:material:1.9.0'
              implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
          }
          EOF

      - name: 创建ProGuard规则文件
        run: |
          mkdir -p app/src/main
          cat > app/proguard-rules.pro << 'EOF'
          # 保留基本规则
          -keepattributes *Annotation*
          -keepattributes SourceFile,LineNumberTable
          -keep public class * extends java.lang.Exception
          
          # 应用程序特定规则
          -keep class com.example.autoexit.** { *; }
          EOF

      - name: 创建资源目录
        run: |
          mkdir -p app/src/main/res/mipmap-hdpi
          mkdir -p app/src/main/res/mipmap-mdpi
          mkdir -p app/src/main/res/mipmap-xhdpi
          mkdir -p app/src/main/res/mipmap-xxhdpi
          mkdir -p app/src/main/res/mipmap-xxxhdpi
          mkdir -p app/src/main/res/values

      - name: 创建基本资源文件
        run: |
          # 创建styles.xml
          cat > app/src/main/res/values/styles.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
                  <item name="colorPrimary">#3F51B5</item>
                  <item name="colorPrimaryDark">#303F9F</item>
                  <item name="colorAccent">#FF4081</item>
              </style>
          </resources>
          EOF
          
          # 创建colors.xml
          cat > app/src/main/res/values/colors.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <color name="purple_200">#FFBB86FC</color>
              <color name="purple_500">#FF6200EE</color>
              <color name="purple_700">#FF3700B3</color>
              <color name="teal_200">#FF03DAC5</color>
              <color name="teal_700">#FF018786</color>
              <color name="black">#FF000000</color>
              <color name="white">#FFFFFFFF</color>
              <color name="ic_launcher_background">#3DDC84</color>
              <color name="ic_launcher_foreground">#FFFFFF</color>
          </resources>
          EOF
          
          # 创建向量图标文件 (XML格式)
          cat > app/src/main/res/mipmap-hdpi/ic_launcher.xml << 'EOF'
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="24dp"
              android:height="24dp"
              android:viewportWidth="24"
              android:viewportHeight="24"
              android:tint="?attr/colorOnPrimary">
            <path
                android:fillColor="@android:color/white"
                android:pathData="M19,3H5C3.9,3 3,3.9 3,5v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2V5C21,3.9 20.1,3 19,3zM19,19H5V5h14V19z"/>
          </vector>
          EOF
          
          cat > app/src/main/res/mipmap-hdpi/ic_launcher_round.xml << 'EOF'
          <vector xmlns:android="http://schemas.android.com/apk/res/android"
              android:width="24dp"
              android:height="24dp"
              android:viewportWidth="24"
              android:viewportHeight="24"
              android:tint="?attr/colorOnPrimary">
            <path
                android:fillColor="@android:color/white"
                android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8z"/>
          </vector>
          EOF
          
          # 复制到其他尺寸目录
          cp app/src/main/res/mipmap-hdpi/ic_launcher.xml app/src/main/res/mipmap-mdpi/ic_launcher.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher.xml app/src/main/res/mipmap-xhdpi/ic_launcher.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher.xml app/src/main/res/mipmap-xxhdpi/ic_launcher.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher.xml app/src/main/res/mipmap-xxxhdpi/ic_launcher.xml
          
          cp app/src/main/res/mipmap-hdpi/ic_launcher_round.xml app/src/main/res/mipmap-mdpi/ic_launcher_round.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher_round.xml app/src/main/res/mipmap-xhdpi/ic_launcher_round.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher_round.xml app/src/main/res/mipmap-xxhdpi/ic_launcher_round.xml
          cp app/src/main/res/mipmap-hdpi/ic_launcher_round.xml app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.xml
          
          # 创建strings.xml
          cat > app/src/main/res/values/strings.xml << 'EOF'
          <resources>
              <string name="app_name">自动退出应用</string>
          </resources>
          EOF

      - name: 创建Java源文件目录
        run: mkdir -p app/src/main/java/com/example/autoexit

      - name: 创建AndroidManifest.xml
        run: |
          cat > app/src/main/AndroidManifest.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android"
              package="com.example.autoexit">

              <application
                  android:allowBackup="true"
                  android:icon="@mipmap/ic_launcher"
                  android:label="@string/app_name"
                  android:roundIcon="@mipmap/ic_launcher_round"
                  android:supportsRtl="true"
                  android:theme="@style/AppTheme">
                  <activity
                      android:name=".MainActivity"
                      android:exported="true">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>

          </manifest>
          EOF

      - name: 创建MainActivity.java
        run: |
          cat > app/src/main/java/com/example/autoexit/MainActivity.java << 'EOF'
          package com.example.autoexit;

          import android.os.Bundle;
          import android.os.Handler;
          import android.widget.Toast;
          import androidx.appcompat.app.AppCompatActivity;

          public class MainActivity extends AppCompatActivity {

              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);
                  
                  // 显示一个简短的提示
                  Toast.makeText(this, "应用正在退出...", Toast.LENGTH_SHORT).show();
                  
                  // 延迟500毫秒后退出应用，以便Toast能够显示
                  new Handler().postDelayed(new Runnable() {
                      @Override
                      public void run() {
                          // 结束当前活动
                          finish();
                          
                          // 确保应用完全退出，不留后台进程
                          android.os.Process.killProcess(android.os.Process.myPid());
                          System.exit(0);
                      }
                  }, 500);
              }
          }
          EOF

      - name: 创建activity_main.xml
        run: |
          mkdir -p app/src/main/res/layout
          cat > app/src/main/res/layout/activity_main.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              xmlns:tools="http://schemas.android.com/tools"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              tools:context=".MainActivity">

              <TextView
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="正在退出应用..."
                  android:textSize="24sp"
                  app:layout_constraintBottom_toBottomOf="parent"
                  app:layout_constraintLeft_toLeftOf="parent"
                  app:layout_constraintRight_toRightOf="parent"
                  app:layout_constraintTop_toTopOf="parent" />

          </androidx.constraintlayout.widget.ConstraintLayout>
          EOF

      - name: 构建Debug APK
        run: ./gradlew assembleDebug

      - name: 构建Release APK
        run: ./gradlew assembleRelease

      - name: 重命名Release APK
        run: |
          mkdir -p artifacts
          cp app/build/outputs/apk/release/app-release.apk artifacts/auto-exit-app-release.apk
          cp app/build/outputs/apk/debug/app-debug.apk artifacts/auto-exit-app-debug.apk

      - name: 上传Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: artifacts/auto-exit-app-debug.apk

      - name: 上传Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: artifacts/auto-exit-app-release.apk

      # 如果是标签推送，则创建Release
      - name: 创建GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/auto-exit-app-release.apk
            artifacts/auto-exit-app-debug.apk
          name: Release ${{ github.ref_name }}
          body: |
            # 自动退出应用 - 版本 ${{ github.ref_name }}
            
            这是一个自动退出的Android应用，在启动后会立即自动退出，不会保留任何后台进程。
            
            ## 下载
            
            - [Release版本APK](artifacts/auto-exit-app-release.apk)
            - [Debug版本APK](artifacts/auto-exit-app-debug.apk)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
